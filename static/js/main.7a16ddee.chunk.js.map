{"version":3,"sources":["images/img.jpg","images/arrow.jpg","images/text.jpg","App.js","index.js"],"names":["App","useState","progress","setProgress","status","setStatus","text","setText","loading","setLoading","showModal","setShowModal","showImage","setShowImage","inputEl","useRef","className","id","src","img","arrow","textimage","Alert","variant","Spinner","animation","size","ListGroup","as","numbered","Item","Form","Group","controlId","Label","Control","type","ref","Button","onClick","console","log","current","files","url","URL","createObjectURL","Tesseract","recognize","logger","m","parseFloat","catch","err","error","then","result","data","ProgressBar","striped","animated","now","alt","Modal","show","Header","Title","Body","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a16ddee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.b1110424.jpg\";","export default __webpack_public_path__ + \"static/media/arrow.ba91d9f6.jpg\";","export default __webpack_public_path__ + \"static/media/text.dbf02e8f.jpg\";","import { useState, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport img from \"./images/img.jpg\";\nimport arrow from \"./images/arrow.jpg\";\nimport textimage from \"./images/text.jpg\";\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Modal from 'react-bootstrap/Modal';\n\nimport './App.css';\n\nfunction App() {\n\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showImage, setShowImage] = useState(false);\n  const inputEl = useRef(null);\n\n\n  const handleClick =  () => {\n    console.log(typeof(inputEl.current.files[0])===\"undefined\");\n    if(typeof(inputEl.current.files[0])===\"undefined\")\n    {\n      console.log(1);\n      setShowModal(true);\n    }\n    else\n    {\n      console.log(2);\n      let url = URL.createObjectURL(inputEl.current.files[0]);\n    setLoading(true);\n    setShowImage(false);\n    setText(\"\");\n    Tesseract.recognize(\n      url, 'eng',\n      {\n        logger: m => {\n          setStatus(m.status);\n          setProgress(parseFloat(m.progress) * 100)\n        }\n      }\n    )\n      .catch(err => {\n        console.error(err);\n      })\n      .then(result => {\n        console.log(result);\n        let text = result.data.text\n        setText(text);\n        setLoading(false);\n        setShowImage(true);\n\n      })\n      \n    }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        <header id=\"headingstyle\">\n          <h1 id=\"heading\">Image to Text Converter</h1>\n          <div id=\"process\">\n            <img src={img} />\n            <img src={arrow} />\n            <img src={textimage} />\n          </div>\n        </header>\n        <div id=\"file\">\n          <h2>Choose File</h2>\n          <Alert variant=\"danger\">\n            <p><Spinner animation=\"grow\" variant=\"danger\" size=\"sm\" /> Please choose only image file</p>\n            <ListGroup as=\"ol\" numbered>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.jpg</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.jpeg</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.jfif</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.pjpeg</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.pjp</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.png</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.svg</ListGroup.Item>\n              <ListGroup.Item as=\"li\" variant=\"danger\">.webp</ListGroup.Item>\n            </ListGroup>\n          </Alert>\n          <hr />\n          <Form.Group controlId=\"formFileLg\" className=\"mb-3\">\n            <Form.Label>Click to choose</Form.Label>\n            <Form.Control type=\"file\" size=\"lg\" ref={inputEl} />\n          </Form.Group>\n          <Button variant=\"outline-success\" onClick={handleClick}>Convert To Text</Button>\n        </div>\n        <div id=\"output\">\n          <h3>Extracted text</h3>\n          <div className=\"text-box\">\n            {loading && <><p>{status} </p><ProgressBar striped variant=\"success\" animated now={progress}/></>}\n            <pre> {text} </pre>\n          </div>\n        </div>\n        <div id=\"image-selected\">\n          {showImage ? <img\n            src={URL.createObjectURL(inputEl.current.files[0])} alt=\"logo\" /> : \"\"}\n        </div>\n        <Modal show={showModal}>\n        <Modal.Header>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please choose one image file!!!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={()=>setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}